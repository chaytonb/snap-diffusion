#!/bin/bash
## {runtag} {rundir} {year}-{month}-{day}T{hour} {runhour}

#SBATCH -A met
#SBATCH --nodes=6 --ntasks-per-core=1 --time=01:00:00
#SBATCH -D /home/metno_op/work/emep/eemep/
#SBATCH -J eemep2 -o /home/metno_op/work/emep/eemep/tmp/eemep_single.log
#SBATCH -e /home/metno_op/work/emep/eemep/tmp/eemep_single.log
#SBATCH --mail-type=FAIL --mail-user=beredskap-fou-kl@met.no
#SBATCH --exclusive


logfile=$HOME/work/emep/eemep2/eemep_single.log
rm -f "$logfile"

exec 1>"$logfile" 2>&1

source $HOME/status/Status_Funcs.sh
maxnodes=6
jobname=eemep2

set -x

#
RUNTAG="{runtag}"
# /prod/forecast/run/eemep2/
RUNDIR={rundir}
SRCDIR=/home/metno_op/emep/eemep2/src/
#DATA_DIR=/home/metno_op/emep/eemep2/input/eEMEP_OpenSource
VERSION=active_volcano


YEAR={year}
MONTH={month}
DAY={day}
HOUR={hour}
RUNTIME={runhour}
# always start at midnight (eemep requirement, and for restart)
STARTDATE=$(date -d "$YEAR-$MONTH-$DAY $HOUR" +%Y,%m,%d,000000)
ENDDATE=$(date -d "$YEAR-$MONTH-$DAY $HOUR +{runhour}hours" +%Y,%m,%d,%H0000)
# restart at midnight the next day
RESTARTDATE=$(date -d "$YEAR-$MONTH-$DAY $HOUR +1days" +%Y,%m,%d,000000)

if [ "$RUNDIR" == "" ]; then
    echo "no rundir"
    exit 1
fi

# cleanup older runs
cd $RUNDIR && find . -mtime +2 -type f -delete

cd $RUNTAG || exit 1

# switch global to local logfile
locallog=eemep_$YEAR-$MONTH-$DAY--$HOUR.log
cp "$logfile" $locallog
exec 1>$locallog 2>&1
ls -l
head -n 3 eemep_script.job


Runstatus "start ...." "$jobname" $maxnodes
trap 'Runstatus "FAILED ..." "$jobname" $maxnodes; echo "$jobname FAILED" > status; exit 159' 0

echo "running" > status

# Link the input data
#ln -s $DATA_DIR/* .   # input files except meteorology
sed -e " s/startdate\s*=.*/startdate = $STARTDATE/;s/enddate.*/enddate = $ENDDATE/;s/outdate\s*=.*/outdate = $RESTARTDATE/" $SRCDIR/Unimod.$VERSION/config_emep.nml > config_emep.nml


# Run the model
# source the modules for unimod
# Load necessary modules
source $SRCDIR/Unimod.$VERSION/Unimod_modules.sh
if mpprun $SRCDIR/Unimod.$VERSION/Unimod; then
    echo "finished" > status
else
    echo "failed" > status
    exit 1
fi


# Clean the links to the input data
# cleanup now done during download
# find . -type l -print0 | xargs -0 rm 

Runstatus "end ......" "$jobname" $maxnodes
trap 0


